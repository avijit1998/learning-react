{"ast":null,"code":"var _jsxFileName = \"D:\\\\Internship Programs\\\\React\\\\pages\\\\testcontext.js\";\nvar __jsx = React.createElement;\nimport React, { useReducer } from \"react\";\nimport ThemeContext from \"../src/ThemeContext\";\nimport Toolbar from \"../src/Toolbar\";\nconst themes = {\n  light: {\n    foreground: \"#000000\",\n    background: \"#eeeeee\"\n  },\n  dark: {\n    foreground: \"#ffffff\",\n    background: \"#222222\"\n  }\n};\n\nfunction TestContext() {\n  const initialState = {\n    count: 0\n  };\n  const initialCount = 0;\n\n  const init = initialCount => {\n    return {\n      count: initialCount\n    };\n  };\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case \"increment\":\n        return {\n          count: state.count + 1\n        };\n\n      case \"decrement\":\n        return {\n          count: state.count - 1\n        };\n\n      case \"reset\":\n        return init(action.payload);\n\n      default:\n        throw new Error();\n    }\n  }\n\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialCount, init);\n\n  const stateChange = data => {\n    dispatch({\n      type: data\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    onClick: () => dispatch({\n      type: \"reset\",\n      payload: initialCount\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Reset\"), __jsx(ThemeContext.Provider, {\n    value: themes.dark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Toolbar, {\n    sign: \"+\",\n    typeReceived: stateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), __jsx(ThemeContext.Provider, {\n    value: themes.light,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(Toolbar, {\n    sign: \"-\",\n    typeReceived: stateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), __jsx(\"b\", {\n    style: {\n      margin: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, state.count));\n}\n\nexport default TestContext;","map":{"version":3,"sources":["D:/Internship Programs/React/pages/testcontext.js"],"names":["React","useReducer","ThemeContext","Toolbar","themes","light","foreground","background","dark","TestContext","initialState","count","initialCount","init","reducer","state","action","type","payload","Error","dispatch","stateChange","data","margin"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE,SADP;AAELC,IAAAA,UAAU,EAAE;AAFP,GADM;AAKbC,EAAAA,IAAI,EAAE;AACJF,IAAAA,UAAU,EAAE,SADR;AAEJC,IAAAA,UAAU,EAAE;AAFR;AALO,CAAf;;AAWA,SAASE,WAAT,GAAuB;AACrB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE;AADY,GAArB;AAIA,QAAMC,YAAY,GAAG,CAArB;;AAEA,QAAMC,IAAI,GAAID,YAAD,IAAkB;AAC7B,WAAO;AAAED,MAAAA,KAAK,EAAEC;AAAT,KAAP;AACD,GAFD;;AAIA,WAASE,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,WAAL;AACE,eAAO;AAAEN,UAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,GAAc;AAAvB,SAAP;;AACF,WAAK,WAAL;AACE,eAAO;AAAEA,UAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,GAAc;AAAvB,SAAP;;AACF,WAAK,OAAL;AACE,eAAOE,IAAI,CAACG,MAAM,CAACE,OAAR,CAAX;;AACF;AACE,cAAM,IAAIC,KAAJ,EAAN;AARJ;AAUD;;AACD,QAAM;AAAA,OAACJ,KAAD;AAAA,OAAQK;AAAR,MAAoBnB,UAAU,CAACa,OAAD,EAAUF,YAAV,EAAwBC,IAAxB,CAApC;;AACA,QAAMQ,WAAW,GAAIC,IAAD,IAAU;AAC5BF,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEK;AAAR,KAAD,CAAR;AACD,GAFD;;AAGA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE,MAAMF,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,OAAO,EAAEN;AAA1B,KAAD,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAME,MAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAER,MAAM,CAACI,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,IAAI,EAAC,GAAd;AAAkB,IAAA,YAAY,EAAEa,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE,MAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEjB,MAAM,CAACC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,IAAI,EAAC,GAAd;AAAkB,IAAA,YAAY,EAAEgB,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,EAaE;AAAG,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BR,KAAK,CAACJ,KAAjC,CAbF,CADF;AAiBD;;AAED,eAAeF,WAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport ThemeContext from \"../src/ThemeContext\";\r\nimport Toolbar from \"../src/Toolbar\";\r\n\r\nconst themes = {\r\n  light: {\r\n    foreground: \"#000000\",\r\n    background: \"#eeeeee\",\r\n  },\r\n  dark: {\r\n    foreground: \"#ffffff\",\r\n    background: \"#222222\",\r\n  },\r\n};\r\n\r\nfunction TestContext() {\r\n  const initialState = {\r\n    count: 0,\r\n  };\r\n\r\n  const initialCount = 0;\r\n\r\n  const init = (initialCount) => {\r\n    return { count: initialCount };\r\n  };\r\n\r\n  function reducer(state, action) {\r\n    switch (action.type) {\r\n      case \"increment\":\r\n        return { count: state.count + 1 };\r\n      case \"decrement\":\r\n        return { count: state.count - 1 };\r\n      case \"reset\":\r\n        return init(action.payload);\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }\r\n  const [state, dispatch] = useReducer(reducer, initialCount, init);\r\n  const stateChange = (data) => {\r\n    dispatch({ type: data });\r\n  };\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={() => dispatch({ type: \"reset\", payload: initialCount })}\r\n      >\r\n        Reset\r\n      </button>\r\n      <ThemeContext.Provider value={themes.dark}>\r\n        <Toolbar sign=\"+\" typeReceived={stateChange} />\r\n      </ThemeContext.Provider>\r\n      <hr></hr>\r\n      <ThemeContext.Provider value={themes.light}>\r\n        <Toolbar sign=\"-\" typeReceived={stateChange} />\r\n      </ThemeContext.Provider>\r\n      <b style={{ margin: 50 }}>{state.count}</b>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TestContext;\r\n"]},"metadata":{},"sourceType":"module"}