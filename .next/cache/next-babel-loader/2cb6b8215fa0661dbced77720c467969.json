{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Internship Programs\\\\React\\\\pages\\\\testcontext.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport ThemeContext from \"../src/ThemeContext\";\nimport Toolbar from \"../src/Toolbar\";\nvar themes = {\n  light: {\n    foreground: \"#000000\",\n    background: \"#eeeeee\"\n  },\n  dark: {\n    foreground: \"#ffffff\",\n    background: \"#222222\"\n  }\n};\n\nfunction TestContext() {\n  var initialState = {\n    count: 0\n  };\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case \"increment\":\n        return {\n          count: state.count + 1\n        };\n\n      case \"decrement\":\n        return {\n          count: state.count - 1\n        };\n\n      default:\n        throw new Error();\n    }\n  }\n\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(ThemeContext.Provider, {\n    value: themes.dark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), __jsx(ThemeContext.Provider, {\n    value: themes.dark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), state.count);\n}\n\nexport default TestContext;","map":{"version":3,"sources":["D:/Internship Programs/React/pages/testcontext.js"],"names":["React","ThemeContext","Toolbar","themes","light","foreground","background","dark","TestContext","initialState","count","reducer","state","action","type","Error","useReducer","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE,SADP;AAELC,IAAAA,UAAU,EAAE;AAFP,GADM;AAKbC,EAAAA,IAAI,EAAE;AACJF,IAAAA,UAAU,EAAE,SADR;AAEJC,IAAAA,UAAU,EAAE;AAFR;AALO,CAAf;;AAWA,SAASE,WAAT,GAAuB;AACrB,MAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE;AADY,GAArB;;AAGA,WAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,WAAL;AACE,eAAO;AAAEJ,UAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAvB,SAAP;;AACF,WAAK,WAAL;AACE,eAAO;AAAEA,UAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAvB,SAAP;;AACF;AACE,cAAM,IAAIK,KAAJ,EAAN;AANJ;AAQD;;AAboB,oBAcKC,UAAU,CAACL,OAAD,EAAUF,YAAV,CAdf;AAAA;AAAA,MAcdG,KAdc;AAAA,MAcPK,QAdO;;AAerB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEd,MAAM,CAACI,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,MAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEJ,MAAM,CAACI,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAOGK,KAAK,CAACF,KAPT,CADF;AAWD;;AAED,eAAeF,WAAf","sourcesContent":["import React from \"react\";\r\nimport ThemeContext from \"../src/ThemeContext\";\r\nimport Toolbar from \"../src/Toolbar\";\r\n\r\nconst themes = {\r\n  light: {\r\n    foreground: \"#000000\",\r\n    background: \"#eeeeee\",\r\n  },\r\n  dark: {\r\n    foreground: \"#ffffff\",\r\n    background: \"#222222\",\r\n  },\r\n};\r\n\r\nfunction TestContext() {\r\n  const initialState = {\r\n    count: 0,\r\n  };\r\n  function reducer(state, action) {\r\n    switch (action.type) {\r\n      case \"increment\":\r\n        return { count: state.count + 1 };\r\n      case \"decrement\":\r\n        return { count: state.count - 1 };\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (\r\n    <div>\r\n      <ThemeContext.Provider value={themes.dark}>\r\n        <Toolbar />\r\n      </ThemeContext.Provider>\r\n      <ThemeContext.Provider value={themes.dark}>\r\n        <Toolbar />\r\n      </ThemeContext.Provider>\r\n      {state.count}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TestContext;\r\n"]},"metadata":{},"sourceType":"module"}